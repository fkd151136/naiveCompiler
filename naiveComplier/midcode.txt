const int con_a = 0
const int con_b = 1
const char con_c1 = 48
const char con_c2 = 115
const char con_c3 = 43
const char con_c4 = 42
var int result
var int var_b[10]
var char var_d[9]
var char var_c
int factorial()
para int n
para int no_use
const int max = 2147483647
var int ans
n == 0
BZ fangkd_ifend0
ret 1
fangkd_ifend0:
n != 0
BZ fangkd_ifend1
aar:
fangkedongt2=n - 1
push 0
push fangkedongt2
call factorial
fangkedongt3=n * ret
ans = fangkedongt3
fangkd_ifend1:
ret ans
void getresult()
para int n
const int max = 2147483647
var int a
aar:
push 0
push n
call factorial
result = ret
ret
int count()
para int a
var int k
k = 0
a < 0
BZ fangkd_ifend4
fangkedongt5=0 - a
a = fangkedongt5
fangkd_ifend4:
a < 10
BZ fangkd_ifend6
ret 1
fangkd_ifend6:
fkd_dobegin7:
fangkedongt8=0 - k
fangkedongt9=0 - fangkedongt8
fangkedongt10=fangkedongt9 + 1
k = fangkedongt10
fangkedongt11=a / 10
a = fangkedongt11
a >= 10
BNZ fkd_dobegin7
fangkedongt12=k + 1
ret fangkedongt12
void print_start()
prt 32
prt 112
prt 108
prt 101
prt 97
prt 115
prt 101
prt 32
prt 105
prt 110
prt 112
prt 117
prt 116
prt 32
prt 97
prt 32
prt 110
prt 117
prt 109
prt 98
prt 101
prt 114
prt 32
ret
void test_empty()
ret
void main()
var int n
var int length
var int aa
var int bb
var char var_foo
var_foo = 67
fangkedongt13=0 - 1
n = fangkedongt13
fangkedongt14=0 - 3
fangkedongt15=fangkedongt14 + 1
var_b[0]=fangkedongt15
prt 32
prt 118
prt 97
prt 108
prt 117
prt 101
prt 32
prt 111
prt 102
prt 32
prt 118
prt 97
prt 114
prt 98
prt 91
prt 48
prt 93
prt 58
prt 32
fangkedongt16=var_b[0]
prt fangkedongt16
var_foo == 67
BZ fkd_nextcase18
prt 32
prt 118
prt 97
prt 108
prt 117
prt 101
prt 32
prt 111
prt 102
prt 32
prt 99
prt 104
prt 97
prt 114
prt 32
prt 118
prt 97
prt 114
prt 95
prt 102
prt 111
prt 111
prt 32
prt 105
prt 115
prt 32
prt var_foo
GOTO fkd_switchend17
fkd_nextcase18:
fkd_switchend17:
n != 0
BZ fangkd_ifend19
prt 32
prt 105
prt 110
prt 105
prt 116
prt 32
prt 118
prt 97
prt 108
prt 117
prt 101
prt 32
prt 111
prt 102
prt 32
prt 110
prt 32
prt 105
prt 115
prt 32
prt n
fangkd_ifend19:
aar:
call print_start
fkd_dobegin20:
scf n
fangkedongt21=0 - n
fangkedongt21 >= 0
BNZ fkd_dobegin20
prt 32
prt 112
prt 108
prt 101
prt 97
prt 115
prt 101
prt 32
prt 105
prt 110
prt 112
prt 117
prt 116
prt 32
prt 116
prt 119
prt 111
prt 32
prt 114
prt 97
prt 110
prt 100
prt 111
prt 109
prt 32
prt 110
prt 117
prt 109
prt 98
prt 101
prt 114
prt 44
prt 32
prt 116
prt 104
prt 101
prt 121
prt 32
prt 119
prt 105
prt 108
prt 108
prt 32
prt 98
prt 101
prt 32
prt 111
prt 109
prt 105
prt 116
prt 101
prt 100
prt 32
scf aa
scf bb
fkd_dobegin22:
fangkedongt24=0 - n
fangkedongt25=0 - 13
fangkedongt24 <= fangkedongt25
BZ fangkd_ifend23
fangkedongt26=n - 13
n = fangkedongt26
fangkd_ifend23:
n > 12
BNZ fkd_dobegin22
aar:
push n
call getresult
aar:
push result
call count
length = ret
prt 32
prt 114
prt 101
prt 115
prt 117
prt 108
prt 116
prt 32
prt 105
prt 115
prt 32
length == 1
BZ fkd_nextcase28
prt 32
prt 49
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase28:
length == 2
BZ fkd_nextcase29
prt 32
prt 50
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 115
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase29:
length == 3
BZ fkd_nextcase30
prt 32
prt 51
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 115
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase30:
length == 4
BZ fkd_nextcase31
prt 32
prt 52
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 115
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase31:
length == 5
BZ fkd_nextcase32
prt 32
prt 53
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 115
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase32:
length == 6
BZ fkd_nextcase33
prt 32
prt 54
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 115
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase33:
length == 7
BZ fkd_nextcase34
prt 32
prt 55
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 115
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase34:
length == 8
BZ fkd_nextcase35
prt 32
prt 56
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 115
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase35:
length == 9
BZ fkd_nextcase36
prt 32
prt 57
prt 32
prt 100
prt 105
prt 103
prt 105
prt 116
prt 115
prt 58
prt 32
prt result
GOTO fkd_switchend27
fkd_nextcase36:
fkd_switchend27:
aar:
call test_empty
GOTO fkd_program_end
fkd_program_end:
